// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/0xPolygon/cdk-data-availability/types"
	mock "github.com/stretchr/testify/mock"
)

// IEthClientFactory is an autogenerated mock type for the IEthClientFactory type
type IEthClientFactory struct {
	mock.Mock
}

type IEthClientFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *IEthClientFactory) EXPECT() *IEthClientFactory_Expecter {
	return &IEthClientFactory_Expecter{mock: &_m.Mock}
}

// CreateEthClient provides a mock function with given fields: ctx, url
func (_m *IEthClientFactory) CreateEthClient(ctx context.Context, url string) (types.IEthClient, error) {
	ret := _m.Called(ctx, url)

	if len(ret) == 0 {
		panic("no return value specified for CreateEthClient")
	}

	var r0 types.IEthClient
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (types.IEthClient, error)); ok {
		return rf(ctx, url)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) types.IEthClient); ok {
		r0 = rf(ctx, url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.IEthClient)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IEthClientFactory_CreateEthClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateEthClient'
type IEthClientFactory_CreateEthClient_Call struct {
	*mock.Call
}

// CreateEthClient is a helper method to define mock.On call
//   - ctx context.Context
//   - url string
func (_e *IEthClientFactory_Expecter) CreateEthClient(ctx interface{}, url interface{}) *IEthClientFactory_CreateEthClient_Call {
	return &IEthClientFactory_CreateEthClient_Call{Call: _e.mock.On("CreateEthClient", ctx, url)}
}

func (_c *IEthClientFactory_CreateEthClient_Call) Run(run func(ctx context.Context, url string)) *IEthClientFactory_CreateEthClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *IEthClientFactory_CreateEthClient_Call) Return(_a0 types.IEthClient, _a1 error) *IEthClientFactory_CreateEthClient_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *IEthClientFactory_CreateEthClient_Call) RunAndReturn(run func(context.Context, string) (types.IEthClient, error)) *IEthClientFactory_CreateEthClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewIEthClientFactory creates a new instance of IEthClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIEthClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *IEthClientFactory {
	mock := &IEthClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
