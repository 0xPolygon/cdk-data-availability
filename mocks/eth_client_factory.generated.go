// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/0xPolygon/cdk-data-availability/types"
	mock "github.com/stretchr/testify/mock"
)

// IEthClientFactory is an autogenerated mock type for the IEthClientFactory type
type IEthClientFactory struct {
	mock.Mock
}

// CreateEthClient provides a mock function with given fields: ctx, url
func (_m *IEthClientFactory) CreateEthClient(ctx context.Context, url string) (types.IEthClient, error) {
	ret := _m.Called(ctx, url)

	if len(ret) == 0 {
		panic("no return value specified for CreateEthClient")
	}

	var r0 types.IEthClient
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (types.IEthClient, error)); ok {
		return rf(ctx, url)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) types.IEthClient); ok {
		r0 = rf(ctx, url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.IEthClient)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIEthClientFactory creates a new instance of IEthClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIEthClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *IEthClientFactory {
	mock := &IEthClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
